apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'


android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 113
        versionName "1.2.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations {
    ugcConfig
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.window:window:$window_version"
    implementation "androidx.webkit:webkit:$webkit_version"

    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-video:$camerax_version"

    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"

    implementation("com.github.inappstory:android-sdk:$inappstory_version") {
        transitive = true
    }

    implementation "androidx.exifinterface:exifinterface:$exif_version"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

project.afterEvaluate {
    def isAndroidLibraryProject = project.plugins.hasPlugin('com.android.library')
    if (isAndroidLibraryProject) {
        task copyLibs(type: Copy) {
            from configurations.ugcConfig
            into "libs"
        }
        mergeReleaseJniLibFolders.dependsOn copyLibs

        task copyDeps(type: Copy) {
            from configurations.ugcConfig {
                include '**/*.jar'
            }
            into "./build/intermediates/packaged-classes/release/libs"
            // this folder gets packaged inside the AAR
        }
        mergeReleaseJniLibFolders.dependsOn copyDeps
        // only this stage worked for me - neither earlier, nor later

        task copyDebugDeps(type: Copy) {
            from configurations.ugcConfig {
                include '**/*.jar'
            }
            into "./build/intermediates/packaged-classes/debug/libs"
        }
        mergeDebugJniLibFolders.dependsOn copyDebugDeps
    }
}